version: '3'
services:
  service:
    build: .
    container_name: ack
    ports:
      - 3000:3000
    networks:
      - app-network
    volumes:
      - .env:/app/.env
    depends_on:
      - mongodb
      - zookeeper
      - kafka
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongodb
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: ack
    ports:
      - 27017:27017
    volumes:
      - mongodb-data:/data/db
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    networks:
      - app-network
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    links:
      - zookeeper
    networks:
      - app-network
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/bitnami
volumes:
  mongodb-data:
    driver: local
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local
networks:
  app-network:
    name: app-network
    driver: bridge
    